// Code generated by protoc-gen-go. DO NOT EDIT.
// source: longman.proto

package longman

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AddRequest struct {
	VocabularyId         int64    `protobuf:"varint,1,opt,name=vocabularyId,proto3" json:"vocabularyId,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddRequest) Reset()         { *m = AddRequest{} }
func (m *AddRequest) String() string { return proto.CompactTextString(m) }
func (*AddRequest) ProtoMessage()    {}
func (*AddRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_75c5b1ffbf8ec17c, []int{0}
}

func (m *AddRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddRequest.Unmarshal(m, b)
}
func (m *AddRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddRequest.Marshal(b, m, deterministic)
}
func (m *AddRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRequest.Merge(m, src)
}
func (m *AddRequest) XXX_Size() int {
	return xxx_messageInfo_AddRequest.Size(m)
}
func (m *AddRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddRequest proto.InternalMessageInfo

func (m *AddRequest) GetVocabularyId() int64 {
	if m != nil {
		return m.VocabularyId
	}
	return 0
}

func (m *AddRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type UpdateRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	VocabularyId         int64    `protobuf:"varint,2,opt,name=vocabularyId,proto3" json:"vocabularyId,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRequest) Reset()         { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()    {}
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_75c5b1ffbf8ec17c, []int{1}
}

func (m *UpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRequest.Unmarshal(m, b)
}
func (m *UpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRequest.Marshal(b, m, deterministic)
}
func (m *UpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRequest.Merge(m, src)
}
func (m *UpdateRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRequest.Size(m)
}
func (m *UpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRequest proto.InternalMessageInfo

func (m *UpdateRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateRequest) GetVocabularyId() int64 {
	if m != nil {
		return m.VocabularyId
	}
	return 0
}

func (m *UpdateRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type GetByIdRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetByIdRequest) Reset()         { *m = GetByIdRequest{} }
func (m *GetByIdRequest) String() string { return proto.CompactTextString(m) }
func (*GetByIdRequest) ProtoMessage()    {}
func (*GetByIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_75c5b1ffbf8ec17c, []int{2}
}

func (m *GetByIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetByIdRequest.Unmarshal(m, b)
}
func (m *GetByIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetByIdRequest.Marshal(b, m, deterministic)
}
func (m *GetByIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetByIdRequest.Merge(m, src)
}
func (m *GetByIdRequest) XXX_Size() int {
	return xxx_messageInfo_GetByIdRequest.Size(m)
}
func (m *GetByIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetByIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetByIdRequest proto.InternalMessageInfo

func (m *GetByIdRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetByVocabularyIdRequest struct {
	VocabularyId         int64    `protobuf:"varint,1,opt,name=vocabularyId,proto3" json:"vocabularyId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetByVocabularyIdRequest) Reset()         { *m = GetByVocabularyIdRequest{} }
func (m *GetByVocabularyIdRequest) String() string { return proto.CompactTextString(m) }
func (*GetByVocabularyIdRequest) ProtoMessage()    {}
func (*GetByVocabularyIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_75c5b1ffbf8ec17c, []int{3}
}

func (m *GetByVocabularyIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetByVocabularyIdRequest.Unmarshal(m, b)
}
func (m *GetByVocabularyIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetByVocabularyIdRequest.Marshal(b, m, deterministic)
}
func (m *GetByVocabularyIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetByVocabularyIdRequest.Merge(m, src)
}
func (m *GetByVocabularyIdRequest) XXX_Size() int {
	return xxx_messageInfo_GetByVocabularyIdRequest.Size(m)
}
func (m *GetByVocabularyIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetByVocabularyIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetByVocabularyIdRequest proto.InternalMessageInfo

func (m *GetByVocabularyIdRequest) GetVocabularyId() int64 {
	if m != nil {
		return m.VocabularyId
	}
	return 0
}

type ListRequest struct {
	Offset               int64    `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int64    `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_75c5b1ffbf8ec17c, []int{4}
}

func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (m *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(m, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

func (m *ListRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type Response struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_75c5b1ffbf8ec17c, []int{5}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Response) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type WordResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Data                 *Word    `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Message              string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Extra                *Extra   `protobuf:"bytes,4,opt,name=extra,proto3" json:"extra,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WordResponse) Reset()         { *m = WordResponse{} }
func (m *WordResponse) String() string { return proto.CompactTextString(m) }
func (*WordResponse) ProtoMessage()    {}
func (*WordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_75c5b1ffbf8ec17c, []int{6}
}

func (m *WordResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WordResponse.Unmarshal(m, b)
}
func (m *WordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WordResponse.Marshal(b, m, deterministic)
}
func (m *WordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WordResponse.Merge(m, src)
}
func (m *WordResponse) XXX_Size() int {
	return xxx_messageInfo_WordResponse.Size(m)
}
func (m *WordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WordResponse proto.InternalMessageInfo

func (m *WordResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *WordResponse) GetData() *Word {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *WordResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *WordResponse) GetExtra() *Extra {
	if m != nil {
		return m.Extra
	}
	return nil
}

type WordListResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Data                 []*Word  `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	Message              string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Extra                *Extra   `protobuf:"bytes,4,opt,name=extra,proto3" json:"extra,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WordListResponse) Reset()         { *m = WordListResponse{} }
func (m *WordListResponse) String() string { return proto.CompactTextString(m) }
func (*WordListResponse) ProtoMessage()    {}
func (*WordListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_75c5b1ffbf8ec17c, []int{7}
}

func (m *WordListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WordListResponse.Unmarshal(m, b)
}
func (m *WordListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WordListResponse.Marshal(b, m, deterministic)
}
func (m *WordListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WordListResponse.Merge(m, src)
}
func (m *WordListResponse) XXX_Size() int {
	return xxx_messageInfo_WordListResponse.Size(m)
}
func (m *WordListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WordListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WordListResponse proto.InternalMessageInfo

func (m *WordListResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *WordListResponse) GetData() []*Word {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *WordListResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *WordListResponse) GetExtra() *Extra {
	if m != nil {
		return m.Extra
	}
	return nil
}

type Word struct {
	Id                   int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	VocabularyId         int64                `protobuf:"varint,2,opt,name=vocabularyId,proto3" json:"vocabularyId,omitempty"`
	Description          string               `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CreatedTime          *timestamp.Timestamp `protobuf:"bytes,4,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
	LastModifiedTime     *timestamp.Timestamp `protobuf:"bytes,5,opt,name=lastModifiedTime,proto3" json:"lastModifiedTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Word) Reset()         { *m = Word{} }
func (m *Word) String() string { return proto.CompactTextString(m) }
func (*Word) ProtoMessage()    {}
func (*Word) Descriptor() ([]byte, []int) {
	return fileDescriptor_75c5b1ffbf8ec17c, []int{8}
}

func (m *Word) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Word.Unmarshal(m, b)
}
func (m *Word) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Word.Marshal(b, m, deterministic)
}
func (m *Word) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Word.Merge(m, src)
}
func (m *Word) XXX_Size() int {
	return xxx_messageInfo_Word.Size(m)
}
func (m *Word) XXX_DiscardUnknown() {
	xxx_messageInfo_Word.DiscardUnknown(m)
}

var xxx_messageInfo_Word proto.InternalMessageInfo

func (m *Word) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Word) GetVocabularyId() int64 {
	if m != nil {
		return m.VocabularyId
	}
	return 0
}

func (m *Word) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Word) GetCreatedTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedTime
	}
	return nil
}

func (m *Word) GetLastModifiedTime() *timestamp.Timestamp {
	if m != nil {
		return m.LastModifiedTime
	}
	return nil
}

type Extra struct {
	TotalCount           int64    `protobuf:"varint,1,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Extra) Reset()         { *m = Extra{} }
func (m *Extra) String() string { return proto.CompactTextString(m) }
func (*Extra) ProtoMessage()    {}
func (*Extra) Descriptor() ([]byte, []int) {
	return fileDescriptor_75c5b1ffbf8ec17c, []int{9}
}

func (m *Extra) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Extra.Unmarshal(m, b)
}
func (m *Extra) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Extra.Marshal(b, m, deterministic)
}
func (m *Extra) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Extra.Merge(m, src)
}
func (m *Extra) XXX_Size() int {
	return xxx_messageInfo_Extra.Size(m)
}
func (m *Extra) XXX_DiscardUnknown() {
	xxx_messageInfo_Extra.DiscardUnknown(m)
}

var xxx_messageInfo_Extra proto.InternalMessageInfo

func (m *Extra) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func init() {
	proto.RegisterType((*AddRequest)(nil), "longman.AddRequest")
	proto.RegisterType((*UpdateRequest)(nil), "longman.UpdateRequest")
	proto.RegisterType((*GetByIdRequest)(nil), "longman.GetByIdRequest")
	proto.RegisterType((*GetByVocabularyIdRequest)(nil), "longman.GetByVocabularyIdRequest")
	proto.RegisterType((*ListRequest)(nil), "longman.ListRequest")
	proto.RegisterType((*Response)(nil), "longman.Response")
	proto.RegisterType((*WordResponse)(nil), "longman.WordResponse")
	proto.RegisterType((*WordListResponse)(nil), "longman.WordListResponse")
	proto.RegisterType((*Word)(nil), "longman.Word")
	proto.RegisterType((*Extra)(nil), "longman.Extra")
}

func init() { proto.RegisterFile("longman.proto", fileDescriptor_75c5b1ffbf8ec17c) }

var fileDescriptor_75c5b1ffbf8ec17c = []byte{
	// 501 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x53, 0xdd, 0x6a, 0xd4, 0x40,
	0x14, 0x6e, 0x7e, 0x76, 0x57, 0xcf, 0x76, 0x97, 0x76, 0xac, 0x35, 0xe6, 0x42, 0xb7, 0x83, 0x60,
	0xaf, 0xb2, 0x50, 0x11, 0x94, 0x8a, 0x50, 0x45, 0xa5, 0x50, 0x11, 0x62, 0xd5, 0xeb, 0xd9, 0xcc,
	0xd9, 0x65, 0x20, 0xc9, 0xc4, 0xcc, 0x6c, 0xb1, 0x0f, 0xe0, 0x85, 0x8f, 0xe5, 0xab, 0xf8, 0x24,
	0xb2, 0x93, 0x4c, 0x9a, 0xb0, 0xad, 0xb5, 0x17, 0xbd, 0xcb, 0xf9, 0xf9, 0xbe, 0x33, 0xe7, 0xe4,
	0xfb, 0x60, 0x94, 0xca, 0x7c, 0x91, 0xb1, 0x3c, 0x2a, 0x4a, 0xa9, 0x25, 0x19, 0xd4, 0x61, 0xf8,
	0x78, 0x21, 0xe5, 0x22, 0xc5, 0xa9, 0x49, 0xcf, 0x96, 0xf3, 0xa9, 0x16, 0x19, 0x2a, 0xcd, 0xb2,
	0xa2, 0xea, 0xa4, 0x31, 0xc0, 0x11, 0xe7, 0x31, 0x7e, 0x5f, 0xa2, 0xd2, 0x84, 0xc2, 0xe6, 0x99,
	0x4c, 0xd8, 0x6c, 0x99, 0xb2, 0xf2, 0xfc, 0x98, 0x07, 0xce, 0xc4, 0xd9, 0xf7, 0xe2, 0x4e, 0x8e,
	0x4c, 0x60, 0xc8, 0x51, 0x25, 0xa5, 0x28, 0xb4, 0x90, 0x79, 0xe0, 0x4e, 0x9c, 0xfd, 0xbb, 0x71,
	0x3b, 0x45, 0x11, 0x46, 0x5f, 0x0a, 0xce, 0x34, 0x5a, 0xda, 0x31, 0xb8, 0xc2, 0x92, 0xb9, 0x82,
	0xaf, 0x8d, 0x71, 0xaf, 0x1f, 0xe3, 0xad, 0x8f, 0x99, 0xc0, 0xf8, 0x03, 0xea, 0x37, 0xe7, 0xc7,
	0xfc, 0x8a, 0x39, 0xf4, 0x35, 0x04, 0xa6, 0xe3, 0x6b, 0x8b, 0xf8, 0x06, 0xab, 0xd2, 0x43, 0x18,
	0x9e, 0x08, 0xa5, 0x2d, 0x64, 0x17, 0xfa, 0x72, 0x3e, 0x57, 0xa8, 0xeb, 0xe6, 0x3a, 0x22, 0x3b,
	0xd0, 0x4b, 0x45, 0x26, 0x74, 0xbd, 0x47, 0x15, 0xd0, 0x17, 0x70, 0x27, 0x46, 0x55, 0xc8, 0x5c,
	0x21, 0x21, 0xe0, 0x27, 0x92, 0xa3, 0xc1, 0x8d, 0x62, 0xf3, 0x4d, 0x02, 0x18, 0x64, 0xa8, 0x14,
	0x5b, 0x60, 0x7d, 0x43, 0x1b, 0xd2, 0x9f, 0x0e, 0x6c, 0x7e, 0x93, 0x25, 0xff, 0x27, 0x7c, 0x0f,
	0x7c, 0xce, 0x34, 0x33, 0xd8, 0xe1, 0xc1, 0x28, 0xb2, 0x02, 0x30, 0x40, 0x53, 0x6a, 0x4f, 0xf0,
	0x3a, 0x13, 0xc8, 0x13, 0xe8, 0xe1, 0x0f, 0x5d, 0xb2, 0xc0, 0x37, 0xe8, 0x71, 0x83, 0x7e, 0xb7,
	0xca, 0xc6, 0x55, 0x91, 0xfe, 0x72, 0x60, 0x6b, 0x45, 0x57, 0xdd, 0xe0, 0xbf, 0xde, 0xe2, 0xdd,
	0xd6, 0x5b, 0xfe, 0x38, 0xe0, 0xaf, 0xe8, 0x6e, 0x47, 0x4b, 0xe4, 0x15, 0x0c, 0x93, 0x12, 0x99,
	0x46, 0x7e, 0x2a, 0x32, 0xac, 0x9f, 0x12, 0x46, 0x95, 0x7b, 0x22, 0xeb, 0x9e, 0xe8, 0xd4, 0xba,
	0x27, 0x6e, 0xb7, 0x93, 0xf7, 0xb0, 0x95, 0x32, 0xa5, 0x3f, 0x4a, 0x2e, 0xe6, 0xa2, 0xa6, 0xe8,
	0x5d, 0x4b, 0xb1, 0x86, 0xa1, 0x4f, 0xa1, 0x67, 0x96, 0x26, 0x8f, 0x00, 0xb4, 0xd4, 0x2c, 0x7d,
	0x2b, 0x97, 0xb9, 0x55, 0x5b, 0x2b, 0x73, 0xf0, 0xdb, 0x85, 0xf1, 0x49, 0x75, 0xa6, 0xcf, 0x58,
	0x9e, 0x89, 0x04, 0xc9, 0x14, 0xbc, 0x23, 0xce, 0xc9, 0xbd, 0xe6, 0x7c, 0x17, 0xb6, 0x0e, 0xb7,
	0x9b, 0xa4, 0xfd, 0x8d, 0x74, 0x83, 0x3c, 0x87, 0x7e, 0xe5, 0x52, 0xb2, 0xdb, 0x94, 0x3b, 0xb6,
	0xbd, 0x1c, 0x76, 0x08, 0x83, 0xda, 0x75, 0xe4, 0x41, 0x53, 0xef, 0xfa, 0x30, 0xbc, 0xdf, 0x55,
	0xc0, 0x05, 0xf8, 0x13, 0x6c, 0xaf, 0x19, 0x92, 0xec, 0x75, 0x69, 0x2e, 0x31, 0xeb, 0xd5, 0x84,
	0x2f, 0xc1, 0x5f, 0xa9, 0x93, 0xec, 0x34, 0x0d, 0x2d, 0xc3, 0x86, 0x0f, 0x3b, 0xb0, 0xb6, 0x8c,
	0xe9, 0xc6, 0xac, 0x6f, 0x7e, 0xc9, 0xb3, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xe8, 0x45, 0x8c,
	0xc2, 0x3b, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LongmanServiceClient is the client API for LongmanService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LongmanServiceClient interface {
	Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*Response, error)
	Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*Response, error)
	GetById(ctx context.Context, in *GetByIdRequest, opts ...grpc.CallOption) (*WordResponse, error)
	GetByVocabularyId(ctx context.Context, in *GetByVocabularyIdRequest, opts ...grpc.CallOption) (*WordResponse, error)
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*WordListResponse, error)
}

type longmanServiceClient struct {
	cc *grpc.ClientConn
}

func NewLongmanServiceClient(cc *grpc.ClientConn) LongmanServiceClient {
	return &longmanServiceClient{cc}
}

func (c *longmanServiceClient) Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/longman.LongmanService/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *longmanServiceClient) Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/longman.LongmanService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *longmanServiceClient) GetById(ctx context.Context, in *GetByIdRequest, opts ...grpc.CallOption) (*WordResponse, error) {
	out := new(WordResponse)
	err := c.cc.Invoke(ctx, "/longman.LongmanService/GetById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *longmanServiceClient) GetByVocabularyId(ctx context.Context, in *GetByVocabularyIdRequest, opts ...grpc.CallOption) (*WordResponse, error) {
	out := new(WordResponse)
	err := c.cc.Invoke(ctx, "/longman.LongmanService/GetByVocabularyId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *longmanServiceClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*WordListResponse, error) {
	out := new(WordListResponse)
	err := c.cc.Invoke(ctx, "/longman.LongmanService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LongmanServiceServer is the server API for LongmanService service.
type LongmanServiceServer interface {
	Add(context.Context, *AddRequest) (*Response, error)
	Update(context.Context, *UpdateRequest) (*Response, error)
	GetById(context.Context, *GetByIdRequest) (*WordResponse, error)
	GetByVocabularyId(context.Context, *GetByVocabularyIdRequest) (*WordResponse, error)
	List(context.Context, *ListRequest) (*WordListResponse, error)
}

// UnimplementedLongmanServiceServer can be embedded to have forward compatible implementations.
type UnimplementedLongmanServiceServer struct {
}

func (*UnimplementedLongmanServiceServer) Add(ctx context.Context, req *AddRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedLongmanServiceServer) Update(ctx context.Context, req *UpdateRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedLongmanServiceServer) GetById(ctx context.Context, req *GetByIdRequest) (*WordResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetById not implemented")
}
func (*UnimplementedLongmanServiceServer) GetByVocabularyId(ctx context.Context, req *GetByVocabularyIdRequest) (*WordResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByVocabularyId not implemented")
}
func (*UnimplementedLongmanServiceServer) List(ctx context.Context, req *ListRequest) (*WordListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}

func RegisterLongmanServiceServer(s *grpc.Server, srv LongmanServiceServer) {
	s.RegisterService(&_LongmanService_serviceDesc, srv)
}

func _LongmanService_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LongmanServiceServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/longman.LongmanService/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LongmanServiceServer).Add(ctx, req.(*AddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LongmanService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LongmanServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/longman.LongmanService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LongmanServiceServer).Update(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LongmanService_GetById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LongmanServiceServer).GetById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/longman.LongmanService/GetById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LongmanServiceServer).GetById(ctx, req.(*GetByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LongmanService_GetByVocabularyId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByVocabularyIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LongmanServiceServer).GetByVocabularyId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/longman.LongmanService/GetByVocabularyId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LongmanServiceServer).GetByVocabularyId(ctx, req.(*GetByVocabularyIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LongmanService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LongmanServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/longman.LongmanService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LongmanServiceServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LongmanService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "longman.LongmanService",
	HandlerType: (*LongmanServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _LongmanService_Add_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _LongmanService_Update_Handler,
		},
		{
			MethodName: "GetById",
			Handler:    _LongmanService_GetById_Handler,
		},
		{
			MethodName: "GetByVocabularyId",
			Handler:    _LongmanService_GetByVocabularyId_Handler,
		},
		{
			MethodName: "List",
			Handler:    _LongmanService_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "longman.proto",
}
